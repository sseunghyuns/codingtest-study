'''
https://www.acmicpc.net/problem/1715
'''

# 10 10 10 40
# (10+10) + (10+10+10) + (10+10+10+40) = 20+30+70 = 120

# 10 10 10 20
# (10+10) + (10+10+10) + (10+10+10+20) = 20+30+50 = 100

# 10 20 20 20 40
# (10+20) + (10+20+20) + (10+20+20+20) + (10+20+20+20+40) = 30+50+70+110=260
# (10+20) + (20+20) + (10+20+20+20) + (10+20+20+20+40) = 30+40+70+110=250

# 1. 20,20,30,40 | 30
# 2. 30, 40, 40 | 70
# 3. 40, 70 | 140
# 4. 110 | 250

# => 항상 가장 낮은 크기의 두 묶음을 선택해야 한다.

import heapq

n = int(input())
h = []
for _ in range(n):
    heapq.heappush(h, int(input()))

# 10 20 40
# 1. 10+20=30 => [30, 40]
#   answer=30
# 2. 30+40=70 => [70]
#   answer=100

answer = 0

while h:
    if len(h)>=2:
        min1 = heapq.heappop(h)
        min2 = heapq.heappop(h)
        answer += (min1+min2)
        heapq.heappush(h, min1+min2)
    else:
        break

print(answer)